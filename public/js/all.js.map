{"version":3,"sources":["imageBuilder.js"],"names":[],"mappingsfile":"all.js","sourcesContent":["  $(function() {\n\n    $('#canvasForm').on('submit',function(e){\n      e.preventDefault();\n\n      var canvas,\n      context,\n      imageObj = new Image();\n\n      var $form = $(this);\n      var imagePath     = this.imgPath.value;\n      var firstWord     = this.first.value;\n      var secondWord    = this.second.value;\n      var boxColor      = this.color.value;\n      var $targetImage  = $('#targetImage');\n      var $updatedImage = $('#updated-image');\n\n      \n\n      initiateCanvas();\n\n      imageObj.onload = function() {\n        \n        setDimensionsOfCanvas(this);\n        drawOverlayBox(this);\n        setUpFont('40pt Arial', 'blue');\n\n        var firstWidth = getTextWidth(firstWord);\n        addWordToCanvas(firstWord, firstWidth, this);\n\n        context.save();\n        var secondWidth = getTextWidth(secondWord);\n        flipText();\n        addWordToCanvas(secondWord, secondWidth, this, true);\n        context.restore();\n\n        updateImgToUserGeneratedImage();\n\n        sendAjaxRequest($form.serialize());\n      };  \n\n      function flipText(){\n        context.rotate(Math.PI);\n      }\n\n      function initiateCanvas(){\n        canvas = document.createElement(\"canvas\");\n        context = canvas.getContext('2d');\n        imageObj = new Image();\n        imageObj.crossOrigin = \"Anonymous\";\n        imageObj.src = imagePath;\n      }  \n\n      function setDimensionsOfCanvas(imgRef)\n      {\n        canvas.width = imgRef.width;\n        canvas.height = imgRef.height;\n        context.drawImage(imageObj, 0, 0);\n      }\n\n      function drawOverlayBox(imgRef){\n        context.save();\n        context.globalAlpha = 0.4;\n        context.fillStyle = boxColor;\n        context.fillRect(0, imgRef.height / 2, imgRef.width, imgRef.height / 2);\n        context.restore();\n      }  \n\n      function setUpFont(fontFace, color){\n        context.font = fontFace;\n        context.fillStyle = color;\n      }\n\n      function getTextWidth(word){\n        return context.measureText(word).width;\n      }\n\n      function addWordToCanvas(word, wordWidth, imgRef, reverse){\n        reverse = typeof reverse !== 'undefined' ? reverse : false;\n\n        if(reverse){\n          context.fillText(word, -(imgRef.width + wordWidth) / 2, -(imgRef.height / 2 + 10));\n        }else{\n          context.fillText(word, (imgRef.width - wordWidth) / 2, imgRef.height / 2 - 10);  \n        }\n      }\n\n      function setGradient(){\n        var gradient = context.createLinearGradient(0, 0, 0, canvas.height);\n\n        gradient.addColorStop(0, 'rgba(255,255,255,0)');\n        gradient.addColorStop(1, 'rgba(255,255,255,1)');\n        \n      }\n\n      function updateImgToUserGeneratedImage(){\n        var imageData = canvas.toDataURL();\n        $updatedImage.val(imageData);\n      }\n\n      function sendAjaxRequest(data){\n        $.ajax({\n          type: 'POST',\n          url: $form.attr('action'),\n          data: data,\n          dataType: 'text',\n          success:function(data){\n            setTimeout(function(){\n              window.location.href = \"gallery\";\n            }, 500)\n          },\n          error:function(){\n            // failed request; give feedback to user\n            console.log(\"error data\");\n          }\n        });\n      }\n\n    });\n\n\n\n});\n"],"sourceRoot":"/source/"}